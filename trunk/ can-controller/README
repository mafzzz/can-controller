-------------------------------------------------------
--------------------FILES INCLUDED---------------------
hdl			-	Contains DUT modules & XRTL transactor
hvl			-	HVL side running on Questa workstation
def.pkg		-	Definitions package
Makefile	-	To compile,build & launch emulation
tbx.config	-	Configuration settings about design partition and target emulator
Sample_transcript	-	Transcripts for one of our emulation runs
Veloce				-	Statistics of our veloce run
Docs				-	Bosch's CAN SPEC & Final ppt

-------------------------------------------------------
--------------------DIRECTIONS-------------------------
To compile for PureSim mode:

make puresim 

To compile for Veloce mode:
(Make sure that that the `define VELOCE complier directive in 'def.pkg' file is un-commented & `define ASSERT_EN is commented out - refer to Notes On Veloce below)

make veloce 

To launch the simulation :

vsim -novopt top can_hvl TbxSvManager +PACKETS=<NumberofPackets>

NumberofPackets = Number of packets to be generated


e.g.
vsim -novopt top can_hvl TbxSvManager +PACKETS=1000

The above command launches simulation and generates 1000 random(yet constrained!) test packets

A variety of flags are available are available in def.pkg for different operation modes:

`define VELOCE			-	Un-comment for Veloce mode (removes non-synthesizable constructs)
`define ASSERT_EN		-	Un-comment to enable Concurrent assertions(should be commented for Veloce run)
`define DEBUG			-	Un-comment to Enable Debug mode(automatically disabled in Veloce mode)
`define ERROR_INJECT	-	Un-comment to Inject Random CRC errors (based on weighted constraints) into packets

---------------------------------------------------------
--------------------NOTES ON VELOCE-----------------------
- Even though design was synthesized in veloce we faced few problems

- In veloce mode we had errors stating some of the constructs like enums were not supported, so we included the DUT and other HDL files as XRTL modules in tbx.config which removed most of the errors (not sure why). So In case you have issues while running in veloce mode, include all files in hdl/ path as XRTL modules. You're tbx.config file will look like below:

rtlc -partition_module_xrtl top
rtlc -partition_module_xrtl clock_gen
rtlc -partition_module_xrtl can_bus
rtlc -partition_module_xrtl can
rtlc -partition_module_xrtl bitstuff
comp -questa
velsyn -D1S

- Also we had some cycle mismatches in veloce mode which result in some packet losses, even though the same test run was successful in TBX puresim.

---------------------------------------------------------
--------------------SVN SETUP----------------------------
1. Install an SVN application such as TortoiseSVN: http://tortoisesvn.net/downloads.html
2. Create in new folder in the location of your choice.
3. Right-click it and click on SVN Checkout. In the dialogue box that appears, paste the URL from the Google Code link provided in Wiki.(Go to the Source tab to find a URL)
4. Create a Questa project in any another folder (local copy) and in 'add existing files', link the .sv files from the SVN directory:
<yourSVNfolder>/trunk/src/rev1
5. Compile your project and then simulate it
NOTE: If you get an error after you simulate which says "work.blahblah package has changed", re-compile and then re-simulate.